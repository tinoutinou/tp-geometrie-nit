/* This C header file is generated by NIT to compile modules and programs that requires hash. */
#ifndef hash_sep
#define hash_sep
#include "kernel._sep.h"
#include <nit_common.h>
extern const char *LOCATE_hash;
extern const int SFT_hash[];
#define CALL_hash___Object___hash(recv) ((hash___Object___hash_t)CALL((recv), (SFT_hash[0] + 0)))
static const char * const LOCATE_hash___Object___hash = "hash::Object::hash";
val_t hash___Object___hash(val_t p0);
typedef val_t (*hash___Object___hash_t)(val_t p0);
static const char * const LOCATE_hash___Int___hash = "hash::Int::(hash::Object::hash)";
val_t hash___Int___hash(val_t p0);
typedef val_t (*hash___Int___hash_t)(val_t p0);
static const char * const LOCATE_hash___Char___hash = "hash::Char::(hash::Object::hash)";
val_t hash___Char___hash(val_t p0);
typedef val_t (*hash___Char___hash_t)(val_t p0);
static const char * const LOCATE_hash___Bool___hash = "hash::Bool::(hash::Object::hash)";
val_t hash___Bool___hash(val_t p0);
typedef val_t (*hash___Bool___hash_t)(val_t p0);
#endif
