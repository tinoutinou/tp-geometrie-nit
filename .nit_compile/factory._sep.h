/* This C header file is generated by NIT to compile modules and programs that requires factory. */
#ifndef factory_sep
#define factory_sep
#include "polygone._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_Fabrique[];
extern const char *LOCATE_factory;
extern const int SFT_factory[];
#define ID_Fabrique (SFT_factory[0])
#define COLOR_Fabrique (SFT_factory[1])
#define INIT_TABLE_POS_Fabrique (SFT_factory[2] + 0)
#define CALL_factory___Fabrique___creerPolygone(recv) ((factory___Fabrique___creerPolygone_t)CALL((recv), (SFT_factory[2] + 1)))
#define CALL_factory___Fabrique___init(recv) ((factory___Fabrique___init_t)CALL((recv), (SFT_factory[2] + 2)))
static const char * const LOCATE_factory___Fabrique___creerPolygone = "factory::Fabrique::creerPolygone";
val_t factory___Fabrique___creerPolygone(val_t p0, val_t p1);
typedef val_t (*factory___Fabrique___creerPolygone_t)(val_t p0, val_t p1);
static const char * const LOCATE_factory___Fabrique___init = "factory::Fabrique::init";
void factory___Fabrique___init(val_t p0, int* init_table);
typedef void (*factory___Fabrique___init_t)(val_t p0, int* init_table);
val_t NEW_Fabrique_factory___Fabrique___init();
#endif
